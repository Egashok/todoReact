{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\todo2\\\\todoReact\\\\client\\\\src\\\\components\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport TasksList from \"./TasksList\";\nimport { fetchTask } from \"../http/taskApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = ({\n  now,\n  date,\n  filter,\n  setFilter,\n  Select,\n  fastAdd\n}) => {\n  _s();\n  const [tasks, setTasks] = useState(fetchTask(1));\n  const [sort, setSort] = useState([]);\n  const [datVis, usedatVis] = useState(date);\n  var d = new Date();\n  var year = d.getFullYear();\n  var month = d.getMonth();\n  var firstDay = new Date().getDate();\n  const [dv, setDv] = useState(String(firstDay) + '.' + String(month + 1) + '.' + String(year));\n  useEffect(() => {\n    setTasks(fetchTask(now));\n  }, [fastAdd, now]);\n  useEffect(() => {\n    if (date == dv) {\n      usedatVis(\"Сегодня\");\n    } else {\n      usedatVis(now);\n    }\n  }, [date]);\n  useEffect(() => {\n    tasks.then(a => {\n      setSort(a);\n    });\n  }, [tasks, fastAdd]);\n  const [pop, setPop] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks__top\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main__title\",\n        children: datVis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"main__btn\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: filter.sort,\n          onChange: selectedSort => setFilter({\n            ...filter,\n            sort: selectedSort\n          }),\n          defaultValue: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\",\n          options: [{\n            value: '',\n            name: 'По добавлению'\n          }, {\n            value: 'title',\n            name: 'По названию'\n          }, {\n            value: 'time',\n            name: 'По дедлайну'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TasksList, {\n      now: now,\n      tasks: sort,\n      setTasks: setSort,\n      setPop: setPop,\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n_s(Tasks, \"zcutTo7Uc64imZ+N/6GuWU8CndE=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useState","useEffect","TasksList","fetchTask","jsxDEV","_jsxDEV","Tasks","now","date","filter","setFilter","Select","fastAdd","_s","tasks","setTasks","sort","setSort","datVis","usedatVis","d","Date","year","getFullYear","month","getMonth","firstDay","getDate","dv","setDv","String","then","a","pop","setPop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","selectedSort","defaultValue","options","name","_c","$RefreshReg$"],"sources":["D:/programming/todo2/todoReact/client/src/components/Tasks.jsx"],"sourcesContent":["import { useState,useEffect} from \"react\";\r\nimport TasksList from \"./TasksList\";\r\nimport { fetchTask } from \"../http/taskApi\";\r\n\r\nconst Tasks = ({now,date,filter,setFilter,Select,fastAdd}) => {\r\n\r\n  const [tasks,setTasks]=useState(fetchTask(1))\r\n\r\n\r\n  const[sort,setSort]=useState([])\r\n  const [datVis,usedatVis]=useState(date);\r\n\r\n  var d=new Date();\r\n  var year = d.getFullYear();\r\n  var month = d.getMonth();\r\n  var firstDay = new Date().getDate();\r\n  const [dv,setDv]=useState(String(firstDay)+'.'+String(month+1)+'.'+String(year))\r\n\r\n  \r\n  useEffect(()=>{\r\n    setTasks(fetchTask(now))\r\n    \r\n  },[fastAdd,now])\r\n\r\n  useEffect(()=>{\r\n    if(date==dv){\r\n      usedatVis(\"Сегодня\")\r\n    }\r\n    else{\r\n      usedatVis(now)\r\n    }\r\n  },[date])\r\n\r\n\r\n  useEffect(()=>{\r\n  \r\n    tasks.then(a => {\r\n      setSort(a)\r\n    });\r\n  },[tasks,fastAdd])\r\n\r\n    const [pop,setPop]=useState(false)\r\n    return ( \r\n      <div className='tasks__wrapper'>\r\n        <div className='tasks__top'>\r\n          <h1 className='main__title'>{datVis}</h1> <button   className='main__btn'>\r\n           <Select\r\n            value={filter.sort}\r\n            onChange={selectedSort=>setFilter({...filter,sort:selectedSort})}\r\n            defaultValue=\"Сортировка\"\r\n            options={[\r\n            {value: '', name:'По добавлению'},\r\n            {value: 'title', name:'По названию'},\r\n            {value: 'time', name:'По дедлайну'},\r\n          \r\n          ]}\r\n          /></button>\r\n          </div>\r\n\r\n        <TasksList now={now}  tasks={sort} setTasks={setSort} setPop={setPop} filter={filter} setFilter={setFilter}/>\r\n     </div>\r\n      );\r\n}\r\n \r\nexport default Tasks;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}