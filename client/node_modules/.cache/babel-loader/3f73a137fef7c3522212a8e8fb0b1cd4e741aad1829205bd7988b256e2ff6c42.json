{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\djego\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\todo\\\\client\\\\src\\\\components\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport TasksList from \"./TasksList\";\nimport Modal from \"./UI/Modal\";\nimport Cardpopup from \"./UI/Cardpopup\";\nimport { useParams } from 'react-router-dom';\nimport { fetchTask } from \"../http/taskApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = ({\n  date,\n  filter,\n  setFilter,\n  Select\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: \"Помыть посуду\",\n    body: \"Помыть тарелку и ложку \",\n    time: \"10:00\"\n  }, {\n    id: 2,\n    title: \"Убраться в квартире\",\n    body: \"Убрать гостинную\",\n    time: \"20:00\"\n  }, {\n    id: 3,\n    title: \"Погулять с собакой\",\n    body: \"Погулять 30 минут с собакой \",\n    time: \"11:01\"\n  }]);\n  useEffect(() => {\n    fetchTask(date).then(date => setTasks(date));\n  }, []);\n  const [pop, setPop] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks__wrapper\",\n    children: [pop && /*#__PURE__*/_jsxDEV(Cardpopup, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks__top\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main__title\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"main__btn\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: filter.sort,\n          onChange: selectedSort => setFilter({\n            ...filter,\n            sort: selectedSort\n          }),\n          defaultValue: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\",\n          options: [{\n            value: '',\n            name: 'По добавлению'\n          }, {\n            value: 'title',\n            name: 'По названию'\n          }, {\n            value: 'time',\n            name: 'По дедлайну'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TasksList, {\n      tasks: tasks,\n      setTasks: setTasks,\n      setPop: setPop,\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n_s(Tasks, \"kojqzjv2ByKCGWcieFBvleQE/v4=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useState","useEffect","TasksList","Modal","Cardpopup","useParams","fetchTask","jsxDEV","_jsxDEV","Tasks","date","filter","setFilter","Select","_s","tasks","setTasks","id","title","body","time","then","pop","setPop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","sort","onChange","selectedSort","defaultValue","options","name","_c","$RefreshReg$"],"sources":["C:/Users/djego/OneDrive/Рабочий стол/todo/client/src/components/Tasks.jsx"],"sourcesContent":["import { useState,useEffect} from \"react\";\r\nimport TasksList from \"./TasksList\";\r\nimport Modal from \"./UI/Modal\";\r\nimport Cardpopup from \"./UI/Cardpopup\";\r\nimport {useParams} from 'react-router-dom'\r\nimport { fetchTask } from \"../http/taskApi\";\r\n\r\nconst Tasks = ({date,filter,setFilter,Select}) => {\r\n\r\n  const [tasks,setTasks]=useState([\r\n    {id:1,title:\"Помыть посуду\",body:\"Помыть тарелку и ложку \",time:\"10:00\"},\r\n    {id:2,title:\"Убраться в квартире\",body:\"Убрать гостинную\",time:\"20:00\"},\r\n    {id:3,title:\"Погулять с собакой\",body:\"Погулять 30 минут с собакой \",time:\"11:01\"}\r\n])\r\n\r\nuseEffect(() => {\r\n  fetchTask(date).then(date => setTasks(date))\r\n}, [])\r\n\r\n    const [pop,setPop]=useState(false)\r\n    return ( \r\n      <div className='tasks__wrapper'>\r\n          {pop && <Cardpopup tasks={tasks}/>}\r\n        <div className='tasks__top'>\r\n          <h1 className='main__title'>{date}</h1> <button   className='main__btn'>\r\n           <Select\r\n            value={filter.sort}\r\n            onChange={selectedSort=>setFilter({...filter,sort:selectedSort})}\r\n            defaultValue=\"Сортировка\"\r\n            options={[\r\n            {value: '', name:'По добавлению'},\r\n            {value: 'title', name:'По названию'},\r\n            {value: 'time', name:'По дедлайну'},\r\n          \r\n          ]}\r\n          /></button>\r\n          </div>\r\n\r\n        <TasksList tasks={tasks} setTasks={setTasks} setPop={setPop} filter={filter} setFilter={setFilter}/>\r\n     </div>\r\n      );\r\n}\r\n \r\nexport default Tasks;"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,SAAS,QAAO,OAAO;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,SAAS,MAAM,gBAAgB;AACtC,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,KAAK,GAAGA,CAAC;EAACC,IAAI;EAACC,MAAM;EAACC,SAAS;EAACC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAEhD,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAChB,QAAQ,CAAC,CAC9B;IAACiB,EAAE,EAAC,CAAC;IAACC,KAAK,EAAC,eAAe;IAACC,IAAI,EAAC,yBAAyB;IAACC,IAAI,EAAC;EAAO,CAAC,EACxE;IAACH,EAAE,EAAC,CAAC;IAACC,KAAK,EAAC,qBAAqB;IAACC,IAAI,EAAC,kBAAkB;IAACC,IAAI,EAAC;EAAO,CAAC,EACvE;IAACH,EAAE,EAAC,CAAC;IAACC,KAAK,EAAC,oBAAoB;IAACC,IAAI,EAAC,8BAA8B;IAACC,IAAI,EAAC;EAAO,CAAC,CACrF,CAAC;EAEFnB,SAAS,CAAC,MAAM;IACdK,SAAS,CAACI,IAAI,CAAC,CAACW,IAAI,CAACX,IAAI,IAAIM,QAAQ,CAACN,IAAI,CAAC,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;EAEF,MAAM,CAACY,GAAG,EAACC,MAAM,CAAC,GAACvB,QAAQ,CAAC,KAAK,CAAC;EAClC,oBACEQ,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,GAC1BH,GAAG,iBAAId,OAAA,CAACJ,SAAS;MAACW,KAAK,EAAEA;IAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpCrB,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBjB,OAAA;QAAIgB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEf;MAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,KAAC,eAAArB,OAAA;QAAUgB,SAAS,EAAC,WAAW;QAAAC,QAAA,eACtEjB,OAAA,CAACK,MAAM;UACNiB,KAAK,EAAEnB,MAAM,CAACoB,IAAK;UACnBC,QAAQ,EAAEC,YAAY,IAAErB,SAAS,CAAC;YAAC,GAAGD,MAAM;YAACoB,IAAI,EAACE;UAAY,CAAC,CAAE;UACjEC,YAAY,EAAC,8DAAY;UACzBC,OAAO,EAAE,CACT;YAACL,KAAK,EAAE,EAAE;YAAEM,IAAI,EAAC;UAAe,CAAC,EACjC;YAACN,KAAK,EAAE,OAAO;YAAEM,IAAI,EAAC;UAAa,CAAC,EACpC;YAACN,KAAK,EAAE,MAAM;YAAEM,IAAI,EAAC;UAAa,CAAC;QAEnC;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAERrB,OAAA,CAACN,SAAS;MAACa,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA,QAAS;MAACO,MAAM,EAAEA,MAAO;MAACZ,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA;IAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClG,CAAC;AAEX,CAAC;AAAAf,EAAA,CAlCKL,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAoCX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}